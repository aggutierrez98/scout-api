// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Scout {
  id                  Int                   @id @default(autoincrement())
  nombre              String                @db.VarChar(45)
  apellido            String                @db.VarChar(45)
  fechaNacimiento     DateTime              @db.Date()
  dni                 String                @db.VarChar(20)
  sexo                String                @db.Char(1)
  localidad           String                @db.VarChar(45)
  direccion           String                @db.VarChar(65)
  telefono            String                @db.VarChar(25)
  mail                String                @db.VarChar(50)
  religion            Religion              @relation(fields: [religionId], references: [id])
  religionId          Int                   @unique
  progresionActual    Progresion?
  documentoPresentado DocumentoPresentado[]
  familiarScout       FamiliarScout?
  insigniaObtenida    InsigniaObtenida?
  Funcion             Funcion               @default(JOVEN)
  fechaCreacion       DateTime              @default(now())
  fechaActualizacion  DateTime              @updatedAt
}

model Documento {
  id                  Int                   @id @default(autoincrement())
  nombre              String                @db.VarChar(45)
  vence               Boolean               @db.Bit(1)
  documentoPresentado DocumentoPresentado[]
}

model DocumentoPresentado {
  id                Int       @id @default(autoincrement())
  documento         Documento @relation(fields: [documentoId], references: [id])
  documentoId       Int       @unique
  scout             Scout     @relation(fields: [scoutId], references: [id])
  scoutId           Int       @unique
  fechaPresentacion DateTime  @db.Date()

  @@index([scoutId, documentoId])
}

model Familiar {
  id                 Int                   @id @default(autoincrement())
  nombre             String                @db.VarChar(45)
  apellido           String                @db.VarChar(45)
  fechaNacimiento    DateTime              @db.Date()
  dni                String                @db.VarChar(20)
  sexo               String                @db.Char(1)
  telefono           String                @db.VarChar(25)
  relacion           RelacionFamiliarScout
  fechaCreacion      DateTime              @default(now())
  fechaActualizacion DateTime              @updatedAt
  padreScout         FamiliarScout[]
}

model FamiliarScout {
  id         Int      @id @default(autoincrement())
  familiar   Familiar @relation(fields: [familiarId], references: [id])
  familiarId Int      @unique
  scout      Scout    @relation(fields: [scoutId], references: [id])
  scoutId    Int      @unique

  @@index([scoutId, familiarId])
}

model Religion {
  id     Int    @id @default(autoincrement())
  nombre String @db.VarChar(45)
  Scout  Scout?
}

model InsigniaObtenida {
  id             Int          @id @default(autoincrement())
  scout          Scout        @relation(fields: [scoutId], references: [id])
  scoutId        Int          @unique
  insignia       TipoInsignia
  progresion     Progresion
  fechaObtencion DateTime     @db.Date()
}

enum RelacionFamiliarScout {
  PADRE
  MADRE
  TIO
  TIA
  HERMANO
  HERMANA
  OTRO
}

enum Progresion {
  PISTA
  RUMBO
  TRAVESIA
}

enum Funcion {
  JOVEN
  EDUCADOR
}

enum TipoInsignia {
  UNIFORME
  GUIASUBGUIA
  PROGRESION
  PROMESA
  ESPECIALIDAD
  SUPERACION
}
